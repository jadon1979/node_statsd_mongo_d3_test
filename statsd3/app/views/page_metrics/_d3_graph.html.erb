

<% content_for :page_javascript do %>
  <script>
    // Supplied via page_stats_controller
    var json_url = "<%= @stats_path %>?flag=<%= @metric_flag%>&metric_var=<%= @metric_var %>";

    var margin = {top: 20, right: 20, bottom: 30, left: 50},
        width = 2400 - margin.left - margin.right,
        height = 300 - margin.top - margin.bottom;

    var parseDate = d3.time.format("%d-%b-%y").parse;

    var x = d3.time.scale()
        .range([0, width/4]);

    var y = d3.scale.linear()
        .range([height, 0]);

    var xAxis = d3.svg.axis()
        .scale(x)
        .orient("bottom");

    var yAxis = d3.svg.axis()
        .scale(y)
        .orient("left");

    var area = d3.svg.area()
        .x(function(d) { return x(d.time); })
        .y0(height)
        .y1(function(d) { return y(d.value); });

    var svg = d3.select("#d3graph").append("svg")
        .attr("width", width + margin.left + margin.right)
        .attr("height", height + margin.top + margin.bottom)
      .append("g")
        .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

    d3.json(json_url, function(error, data) {
      data.forEach(function(d) {
        m = new Date(d.time)
        d.time = new Date(d.time).getTime();
        d.value = +d.value;
      });

      x.domain(d3.extent(data, function(d) { return d.time; }));
      y.domain([0, 100]);

      svg.append("path")
          .datum(data)
          .attr("class", "area")
          .attr("d", area);

      svg.append("g")
          .attr("class", "x axis")
          .attr("transform", "translate(0," + height + ")")
          .call(xAxis);

      svg.append("g")
          .attr("class", "y axis")
          .call(yAxis)
        .append("text")
          .attr("transform", "rotate(-90)")
          .attr("y", 6)
          .attr("dy", ".71em")
          .style("text-anchor", "end")
          .text("<%= @metric_flag%> Flag")

    });

  </script>

<% end %>

